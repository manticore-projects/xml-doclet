name: Java CI with Gradle

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]

permissions:
  contents: read

jobs:
  gradle_check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17', '21', '22', '23' ]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: master
          fetch-depth: 0
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
      - name: Build with Gradle
        run: ./gradlew build check

  gradle_publish:
    needs: gradle_check
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@main
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        uses: gradle/actions/setup-gradle@main

      - id: install-gradle-properties
        name: Install Gradle Properties from Secret
        env:
          GRADLE_PROPERTIES: ${{ secrets.GRADLE_PROPERTIES }}
          shell: bash
        run: |
          mkdir -p ~/.gradle/
          echo "GRADLE_USER_HOME=${HOME}/.gradle" >> $GITHUB_ENV
          echo "${GRADLE_PROPERTIES}" > ~/.gradle/gradle.properties        

      # create the ASCII armour:
      #    gpg -a --export-secret-keys <key_id> > keyfile.asc
      # then store the content of <keyfile.asc> as github secret <OSSRH_GPG_SECRET_KEY>
      - id: install-secret-key
        name: Install GPG Key from Secret
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --export-secret-keys -o /home/runner/.gnupg/secring.gpg  

      - name: Publish with Gradle
        run: ./gradlew build publish
        env:
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
